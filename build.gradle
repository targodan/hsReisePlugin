buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
    }
}

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

apply plugin: 'java'
apply plugin: 'com.github.jacobono.jaxb'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext.mainClassName = 'reiseplugin.Main'
version = '1.0.0'

repositories {
    jcenter()
    mavenCentral()
    ivy {
        url "http://www.helden-software.de/down/hs5/050502"
        layout 'pattern' , {
            ivy '[module]-ivy.xml'
            artifact '[module](.[ext])'
        }
    }
}

dependencies {
    compile name: 'helden'


    compile "org.eclipse.swt.gtk.linux:x86_64:3.3.0-v3346"
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
    jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
    jaxb 'javax.xml.bind:jaxb-api:2.2.7'

    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'junit', name: 'junit-dep', version: '4.10'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.+'
}

jaxb {
    xsdDir = 'xml/'
    xjc {
        generatePackage = 'reiseplugin.data.helden.entities.jaxb'
        args            = ["-encoding", "utf8"]
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                        'reiseplugin/HeldenStart.class',
                        'reiseplugin/Main.class',
                        'reiseplugin/WTFException.class',
                        'reiseplugin/gui/**',
                        'reiseplugin/data/DummyService.class',
                        'reiseplugin/data/helden/entities/Daten.class',
                        'reiseplugin/data/helden/entities/ObjectFactory.class',
                        'reiseplugin/data/helden/entities/jaxb/**'
                    ]
            )
        })
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'hsReisePlugin',
                   'Implementation-Version': version,
                   'Main-Class': mainClassName,
                   'HeldenPluginClass': 'reiseplugin.HeldenStart.class'
    }
}

task deploy(type:Exec) {
    doFirst {
        def Properties props = new Properties()
        def File propFile = new File("heldenSoftware.path");

        if(propFile == null || !propFile.exists() || !propFile.canRead()) {
            throw new InvalidUserDataException("The file \"heldenSoftware.path\" does not exists! Please use the template \"heldenSoftware.path.example\" to create it.")
        }

        props.load(new FileInputStream(propFile))

        if(props == null || !props.containsKey('pluginPath') || props['pluginPath'].equals("") || props['pluginPath'].equals("\"\"")) {
            throw new InvalidUserDataException("The pluginPath ist not set! Please set the pluginPath in the file \"heldenSoftware.path\".")
        }
        
        // windows
        commandLine "copy", jar.archivePath, props['pluginPath']

        // linux
        commandLine "cp", jar.archivePath, props['pluginPath']
    }
}

deploy.dependsOn build
